classdef NovatelCorrectedImuData < ros.Message
    %NovatelCorrectedImuData MATLAB implementation of novatel_gps_msgs/NovatelCorrectedImuData
    %   This class was automatically generated by
    %   ros.msg.internal.gen.MessageClassGenerator.
    
    %   Copyright 2014-2020 The MathWorks, Inc.
    
    %#ok<*INUSD>
    
    properties (Constant)
        MessageType = 'novatel_gps_msgs/NovatelCorrectedImuData' % The ROS message type
    end
    
    properties (Constant, Hidden)
        MD5Checksum = '81ec3aad90f65315c03ad2199cdd99cf' % The MD5 Checksum of the message definition
    end
    
    properties (Access = protected)
        JavaMessage % The Java message object
    end
    
    properties (Constant, Access = protected)
        NovatelGpsMsgsNovatelMessageHeaderClass = ros.msg.internal.MessageFactory.getClassForType('novatel_gps_msgs/NovatelMessageHeader') % Dispatch to MATLAB class for message type novatel_gps_msgs/NovatelMessageHeader
        StdMsgsHeaderClass = ros.msg.internal.MessageFactory.getClassForType('std_msgs/Header') % Dispatch to MATLAB class for message type std_msgs/Header
    end
    
    properties (Dependent)
        Header
        NovatelMsgHeader
        GpsWeekNum
        GpsSeconds
        PitchRate
        RollRate
        YawRate
        LateralAcceleration
        LongitudinalAcceleration
        VerticalAcceleration
    end
    
    properties (Access = protected)
        Cache = struct('Header', [], 'NovatelMsgHeader', []) % The cache for fast data access
    end
    
    properties (Constant, Hidden)
        PropertyList = {'GpsSeconds', 'GpsWeekNum', 'Header', 'LateralAcceleration', 'LongitudinalAcceleration', 'NovatelMsgHeader', 'PitchRate', 'RollRate', 'VerticalAcceleration', 'YawRate'} % List of non-constant message properties
        ROSPropertyList = {'gps_seconds', 'gps_week_num', 'header', 'lateral_acceleration', 'longitudinal_acceleration', 'novatel_msg_header', 'pitch_rate', 'roll_rate', 'vertical_acceleration', 'yaw_rate'} % List of non-constant ROS message properties
    end
    
    methods
        function obj = NovatelCorrectedImuData(msg)
            %NovatelCorrectedImuData Construct the message object NovatelCorrectedImuData
            import com.mathworks.toolbox.ros.message.MessageInfo;
            
            % Support default constructor
            if nargin == 0
                obj.JavaMessage = obj.createNewJavaMessage;
                return;
            end
            
            % Construct appropriate empty array
            if isempty(msg)
                obj = obj.empty(0,1);
                return;
            end
            
            % Make scalar construction fast
            if isscalar(msg)
                % Check for correct input class
                if ~MessageInfo.compareTypes(msg(1), obj.MessageType)
                    error(message('ros:mlros:message:NoTypeMatch', obj.MessageType, ...
                        char(MessageInfo.getType(msg(1))) ));
                end
                obj.JavaMessage = msg(1);
                return;
            end
            
            % Check that this is a vector of scalar messages. Since this
            % is an object array, use arrayfun to verify.
            if ~all(arrayfun(@isscalar, msg))
                error(message('ros:mlros:message:MessageArraySizeError'));
            end
            
            % Check that all messages in the array have the correct type
            if ~all(arrayfun(@(x) MessageInfo.compareTypes(x, obj.MessageType), msg))
                error(message('ros:mlros:message:NoTypeMatchArray', obj.MessageType));
            end
            
            % Construct array of objects if necessary
            objType = class(obj);
            for i = 1:length(msg)
                obj(i,1) = feval(objType, msg(i)); %#ok<AGROW>
            end
        end
        
        function header = get.Header(obj)
            %get.Header Get the value for property Header
            if isempty(obj.Cache.Header)
                obj.Cache.Header = feval(obj.StdMsgsHeaderClass, obj.JavaMessage.getHeader);
            end
            header = obj.Cache.Header;
        end
        
        function set.Header(obj, header)
            %set.Header Set the value for property Header
            validateattributes(header, {obj.StdMsgsHeaderClass}, {'nonempty', 'scalar'}, 'NovatelCorrectedImuData', 'Header');
            
            obj.JavaMessage.setHeader(header.getJavaObject);
            
            % Update cache if necessary
            if ~isempty(obj.Cache.Header)
                obj.Cache.Header.setJavaObject(header.getJavaObject);
            end
        end
        
        function novatelmsgheader = get.NovatelMsgHeader(obj)
            %get.NovatelMsgHeader Get the value for property NovatelMsgHeader
            if isempty(obj.Cache.NovatelMsgHeader)
                obj.Cache.NovatelMsgHeader = feval(obj.NovatelGpsMsgsNovatelMessageHeaderClass, obj.JavaMessage.getNovatelMsgHeader);
            end
            novatelmsgheader = obj.Cache.NovatelMsgHeader;
        end
        
        function set.NovatelMsgHeader(obj, novatelmsgheader)
            %set.NovatelMsgHeader Set the value for property NovatelMsgHeader
            validateattributes(novatelmsgheader, {obj.NovatelGpsMsgsNovatelMessageHeaderClass}, {'nonempty', 'scalar'}, 'NovatelCorrectedImuData', 'NovatelMsgHeader');
            
            obj.JavaMessage.setNovatelMsgHeader(novatelmsgheader.getJavaObject);
            
            % Update cache if necessary
            if ~isempty(obj.Cache.NovatelMsgHeader)
                obj.Cache.NovatelMsgHeader.setJavaObject(novatelmsgheader.getJavaObject);
            end
        end
        
        function gpsweeknum = get.GpsWeekNum(obj)
            %get.GpsWeekNum Get the value for property GpsWeekNum
            gpsweeknum = typecast(int32(obj.JavaMessage.getGpsWeekNum), 'uint32');
        end
        
        function set.GpsWeekNum(obj, gpsweeknum)
            %set.GpsWeekNum Set the value for property GpsWeekNum
            validateattributes(gpsweeknum, {'numeric'}, {'nonempty', 'scalar'}, 'NovatelCorrectedImuData', 'GpsWeekNum');
            
            obj.JavaMessage.setGpsWeekNum(gpsweeknum);
        end
        
        function gpsseconds = get.GpsSeconds(obj)
            %get.GpsSeconds Get the value for property GpsSeconds
            gpsseconds = double(obj.JavaMessage.getGpsSeconds);
        end
        
        function set.GpsSeconds(obj, gpsseconds)
            %set.GpsSeconds Set the value for property GpsSeconds
            validateattributes(gpsseconds, {'numeric'}, {'nonempty', 'scalar'}, 'NovatelCorrectedImuData', 'GpsSeconds');
            
            obj.JavaMessage.setGpsSeconds(gpsseconds);
        end
        
        function pitchrate = get.PitchRate(obj)
            %get.PitchRate Get the value for property PitchRate
            pitchrate = double(obj.JavaMessage.getPitchRate);
        end
        
        function set.PitchRate(obj, pitchrate)
            %set.PitchRate Set the value for property PitchRate
            validateattributes(pitchrate, {'numeric'}, {'nonempty', 'scalar'}, 'NovatelCorrectedImuData', 'PitchRate');
            
            obj.JavaMessage.setPitchRate(pitchrate);
        end
        
        function rollrate = get.RollRate(obj)
            %get.RollRate Get the value for property RollRate
            rollrate = double(obj.JavaMessage.getRollRate);
        end
        
        function set.RollRate(obj, rollrate)
            %set.RollRate Set the value for property RollRate
            validateattributes(rollrate, {'numeric'}, {'nonempty', 'scalar'}, 'NovatelCorrectedImuData', 'RollRate');
            
            obj.JavaMessage.setRollRate(rollrate);
        end
        
        function yawrate = get.YawRate(obj)
            %get.YawRate Get the value for property YawRate
            yawrate = double(obj.JavaMessage.getYawRate);
        end
        
        function set.YawRate(obj, yawrate)
            %set.YawRate Set the value for property YawRate
            validateattributes(yawrate, {'numeric'}, {'nonempty', 'scalar'}, 'NovatelCorrectedImuData', 'YawRate');
            
            obj.JavaMessage.setYawRate(yawrate);
        end
        
        function lateralacceleration = get.LateralAcceleration(obj)
            %get.LateralAcceleration Get the value for property LateralAcceleration
            lateralacceleration = double(obj.JavaMessage.getLateralAcceleration);
        end
        
        function set.LateralAcceleration(obj, lateralacceleration)
            %set.LateralAcceleration Set the value for property LateralAcceleration
            validateattributes(lateralacceleration, {'numeric'}, {'nonempty', 'scalar'}, 'NovatelCorrectedImuData', 'LateralAcceleration');
            
            obj.JavaMessage.setLateralAcceleration(lateralacceleration);
        end
        
        function longitudinalacceleration = get.LongitudinalAcceleration(obj)
            %get.LongitudinalAcceleration Get the value for property LongitudinalAcceleration
            longitudinalacceleration = double(obj.JavaMessage.getLongitudinalAcceleration);
        end
        
        function set.LongitudinalAcceleration(obj, longitudinalacceleration)
            %set.LongitudinalAcceleration Set the value for property LongitudinalAcceleration
            validateattributes(longitudinalacceleration, {'numeric'}, {'nonempty', 'scalar'}, 'NovatelCorrectedImuData', 'LongitudinalAcceleration');
            
            obj.JavaMessage.setLongitudinalAcceleration(longitudinalacceleration);
        end
        
        function verticalacceleration = get.VerticalAcceleration(obj)
            %get.VerticalAcceleration Get the value for property VerticalAcceleration
            verticalacceleration = double(obj.JavaMessage.getVerticalAcceleration);
        end
        
        function set.VerticalAcceleration(obj, verticalacceleration)
            %set.VerticalAcceleration Set the value for property VerticalAcceleration
            validateattributes(verticalacceleration, {'numeric'}, {'nonempty', 'scalar'}, 'NovatelCorrectedImuData', 'VerticalAcceleration');
            
            obj.JavaMessage.setVerticalAcceleration(verticalacceleration);
        end
    end
    
    methods (Access = protected)
        function resetCache(obj)
            %resetCache Resets any cached properties
            obj.Cache.Header = [];
            obj.Cache.NovatelMsgHeader = [];
        end
        
        function cpObj = copyElement(obj)
            %copyElement Implements deep copy behavior for message
            
            % Call default copy method for shallow copy
            cpObj = copyElement@ros.Message(obj);
            
            % Clear any existing cached properties
            cpObj.resetCache;
            
            % Create a new Java message object
            cpObj.JavaMessage = obj.createNewJavaMessage;
            
            % Iterate over all primitive properties
            cpObj.GpsWeekNum = obj.GpsWeekNum;
            cpObj.GpsSeconds = obj.GpsSeconds;
            cpObj.PitchRate = obj.PitchRate;
            cpObj.RollRate = obj.RollRate;
            cpObj.YawRate = obj.YawRate;
            cpObj.LateralAcceleration = obj.LateralAcceleration;
            cpObj.LongitudinalAcceleration = obj.LongitudinalAcceleration;
            cpObj.VerticalAcceleration = obj.VerticalAcceleration;
            
            % Recursively copy compound properties
            cpObj.Header = copy(obj.Header);
            cpObj.NovatelMsgHeader = copy(obj.NovatelMsgHeader);
        end
        
        function reload(obj, strObj)
            %reload Called by loadobj to assign properties
            obj.GpsWeekNum = strObj.GpsWeekNum;
            obj.GpsSeconds = strObj.GpsSeconds;
            obj.PitchRate = strObj.PitchRate;
            obj.RollRate = strObj.RollRate;
            obj.YawRate = strObj.YawRate;
            obj.LateralAcceleration = strObj.LateralAcceleration;
            obj.LongitudinalAcceleration = strObj.LongitudinalAcceleration;
            obj.VerticalAcceleration = strObj.VerticalAcceleration;
            obj.Header = feval([obj.StdMsgsHeaderClass '.loadobj'], strObj.Header);
            obj.NovatelMsgHeader = feval([obj.NovatelGpsMsgsNovatelMessageHeaderClass '.loadobj'], strObj.NovatelMsgHeader);
        end
    end
    
    methods (Access = ?ros.Message)
        function strObj = saveobj(obj)
            %saveobj Implements saving of message to MAT file
            
            % Return an empty element if object array is empty
            if isempty(obj)
                strObj = struct.empty;
                return
            end
            
            strObj.GpsWeekNum = obj.GpsWeekNum;
            strObj.GpsSeconds = obj.GpsSeconds;
            strObj.PitchRate = obj.PitchRate;
            strObj.RollRate = obj.RollRate;
            strObj.YawRate = obj.YawRate;
            strObj.LateralAcceleration = obj.LateralAcceleration;
            strObj.LongitudinalAcceleration = obj.LongitudinalAcceleration;
            strObj.VerticalAcceleration = obj.VerticalAcceleration;
            strObj.Header = saveobj(obj.Header);
            strObj.NovatelMsgHeader = saveobj(obj.NovatelMsgHeader);
        end
    end
    
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
            %loadobj Implements loading of message from MAT file
            
            % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.custom.msggen.novatel_gps_msgs.NovatelCorrectedImuData.empty(0,1);
                return
            end
            
            % Create an empty message object
            obj = ros.custom.msggen.novatel_gps_msgs.NovatelCorrectedImuData;
            obj.reload(strObj);
        end
    end
end
