classdef NovatelMessageHeader < ros.Message
    %NovatelMessageHeader MATLAB implementation of novatel_gps_msgs/NovatelMessageHeader
    %   This class was automatically generated by
    %   ros.msg.internal.gen.MessageClassGenerator.
    
    %   Copyright 2014-2020 The MathWorks, Inc.
    
    %#ok<*INUSD>
    
    properties (Constant)
        MessageType = 'novatel_gps_msgs/NovatelMessageHeader' % The ROS message type
    end
    
    properties (Constant, Hidden)
        MD5Checksum = '43b536606c527a56309297282bb7adef' % The MD5 Checksum of the message definition
    end
    
    properties (Access = protected)
        JavaMessage % The Java message object
    end
    
    properties (Constant, Access = protected)
        NovatelGpsMsgsNovatelReceiverStatusClass = ros.msg.internal.MessageFactory.getClassForType('novatel_gps_msgs/NovatelReceiverStatus') % Dispatch to MATLAB class for message type novatel_gps_msgs/NovatelReceiverStatus
    end
    
    properties (Dependent)
        MessageName
        Port
        SequenceNum
        PercentIdleTime
        GpsTimeStatus
        GpsWeekNum
        GpsSeconds
        ReceiverStatus
        ReceiverSoftwareVersion
    end
    
    properties (Access = protected)
        Cache = struct('ReceiverStatus', []) % The cache for fast data access
    end
    
    properties (Constant, Hidden)
        PropertyList = {'GpsSeconds', 'GpsTimeStatus', 'GpsWeekNum', 'MessageName', 'PercentIdleTime', 'Port', 'ReceiverSoftwareVersion', 'ReceiverStatus', 'SequenceNum'} % List of non-constant message properties
        ROSPropertyList = {'gps_seconds', 'gps_time_status', 'gps_week_num', 'message_name', 'percent_idle_time', 'port', 'receiver_software_version', 'receiver_status', 'sequence_num'} % List of non-constant ROS message properties
    end
    
    methods
        function obj = NovatelMessageHeader(msg)
            %NovatelMessageHeader Construct the message object NovatelMessageHeader
            import com.mathworks.toolbox.ros.message.MessageInfo;
            
            % Support default constructor
            if nargin == 0
                obj.JavaMessage = obj.createNewJavaMessage;
                return;
            end
            
            % Construct appropriate empty array
            if isempty(msg)
                obj = obj.empty(0,1);
                return;
            end
            
            % Make scalar construction fast
            if isscalar(msg)
                % Check for correct input class
                if ~MessageInfo.compareTypes(msg(1), obj.MessageType)
                    error(message('ros:mlros:message:NoTypeMatch', obj.MessageType, ...
                        char(MessageInfo.getType(msg(1))) ));
                end
                obj.JavaMessage = msg(1);
                return;
            end
            
            % Check that this is a vector of scalar messages. Since this
            % is an object array, use arrayfun to verify.
            if ~all(arrayfun(@isscalar, msg))
                error(message('ros:mlros:message:MessageArraySizeError'));
            end
            
            % Check that all messages in the array have the correct type
            if ~all(arrayfun(@(x) MessageInfo.compareTypes(x, obj.MessageType), msg))
                error(message('ros:mlros:message:NoTypeMatchArray', obj.MessageType));
            end
            
            % Construct array of objects if necessary
            objType = class(obj);
            for i = 1:length(msg)
                obj(i,1) = feval(objType, msg(i)); %#ok<AGROW>
            end
        end
        
        function messagename = get.MessageName(obj)
            %get.MessageName Get the value for property MessageName
            messagename = char(obj.JavaMessage.getMessageName);
        end
        
        function set.MessageName(obj, messagename)
            %set.MessageName Set the value for property MessageName
            messagename = convertStringsToChars(messagename);
            
            validateattributes(messagename, {'char', 'string'}, {}, 'NovatelMessageHeader', 'MessageName');
            
            obj.JavaMessage.setMessageName(messagename);
        end
        
        function port = get.Port(obj)
            %get.Port Get the value for property Port
            port = char(obj.JavaMessage.getPort);
        end
        
        function set.Port(obj, port)
            %set.Port Set the value for property Port
            port = convertStringsToChars(port);
            
            validateattributes(port, {'char', 'string'}, {}, 'NovatelMessageHeader', 'Port');
            
            obj.JavaMessage.setPort(port);
        end
        
        function sequencenum = get.SequenceNum(obj)
            %get.SequenceNum Get the value for property SequenceNum
            sequencenum = typecast(int32(obj.JavaMessage.getSequenceNum), 'uint32');
        end
        
        function set.SequenceNum(obj, sequencenum)
            %set.SequenceNum Set the value for property SequenceNum
            validateattributes(sequencenum, {'numeric'}, {'nonempty', 'scalar'}, 'NovatelMessageHeader', 'SequenceNum');
            
            obj.JavaMessage.setSequenceNum(sequencenum);
        end
        
        function percentidletime = get.PercentIdleTime(obj)
            %get.PercentIdleTime Get the value for property PercentIdleTime
            percentidletime = single(obj.JavaMessage.getPercentIdleTime);
        end
        
        function set.PercentIdleTime(obj, percentidletime)
            %set.PercentIdleTime Set the value for property PercentIdleTime
            validateattributes(percentidletime, {'numeric'}, {'nonempty', 'scalar'}, 'NovatelMessageHeader', 'PercentIdleTime');
            
            obj.JavaMessage.setPercentIdleTime(percentidletime);
        end
        
        function gpstimestatus = get.GpsTimeStatus(obj)
            %get.GpsTimeStatus Get the value for property GpsTimeStatus
            gpstimestatus = char(obj.JavaMessage.getGpsTimeStatus);
        end
        
        function set.GpsTimeStatus(obj, gpstimestatus)
            %set.GpsTimeStatus Set the value for property GpsTimeStatus
            gpstimestatus = convertStringsToChars(gpstimestatus);
            
            validateattributes(gpstimestatus, {'char', 'string'}, {}, 'NovatelMessageHeader', 'GpsTimeStatus');
            
            obj.JavaMessage.setGpsTimeStatus(gpstimestatus);
        end
        
        function gpsweeknum = get.GpsWeekNum(obj)
            %get.GpsWeekNum Get the value for property GpsWeekNum
            gpsweeknum = typecast(int32(obj.JavaMessage.getGpsWeekNum), 'uint32');
        end
        
        function set.GpsWeekNum(obj, gpsweeknum)
            %set.GpsWeekNum Set the value for property GpsWeekNum
            validateattributes(gpsweeknum, {'numeric'}, {'nonempty', 'scalar'}, 'NovatelMessageHeader', 'GpsWeekNum');
            
            obj.JavaMessage.setGpsWeekNum(gpsweeknum);
        end
        
        function gpsseconds = get.GpsSeconds(obj)
            %get.GpsSeconds Get the value for property GpsSeconds
            gpsseconds = double(obj.JavaMessage.getGpsSeconds);
        end
        
        function set.GpsSeconds(obj, gpsseconds)
            %set.GpsSeconds Set the value for property GpsSeconds
            validateattributes(gpsseconds, {'numeric'}, {'nonempty', 'scalar'}, 'NovatelMessageHeader', 'GpsSeconds');
            
            obj.JavaMessage.setGpsSeconds(gpsseconds);
        end
        
        function receiverstatus = get.ReceiverStatus(obj)
            %get.ReceiverStatus Get the value for property ReceiverStatus
            if isempty(obj.Cache.ReceiverStatus)
                obj.Cache.ReceiverStatus = feval(obj.NovatelGpsMsgsNovatelReceiverStatusClass, obj.JavaMessage.getReceiverStatus);
            end
            receiverstatus = obj.Cache.ReceiverStatus;
        end
        
        function set.ReceiverStatus(obj, receiverstatus)
            %set.ReceiverStatus Set the value for property ReceiverStatus
            validateattributes(receiverstatus, {obj.NovatelGpsMsgsNovatelReceiverStatusClass}, {'nonempty', 'scalar'}, 'NovatelMessageHeader', 'ReceiverStatus');
            
            obj.JavaMessage.setReceiverStatus(receiverstatus.getJavaObject);
            
            % Update cache if necessary
            if ~isempty(obj.Cache.ReceiverStatus)
                obj.Cache.ReceiverStatus.setJavaObject(receiverstatus.getJavaObject);
            end
        end
        
        function receiversoftwareversion = get.ReceiverSoftwareVersion(obj)
            %get.ReceiverSoftwareVersion Get the value for property ReceiverSoftwareVersion
            receiversoftwareversion = typecast(int32(obj.JavaMessage.getReceiverSoftwareVersion), 'uint32');
        end
        
        function set.ReceiverSoftwareVersion(obj, receiversoftwareversion)
            %set.ReceiverSoftwareVersion Set the value for property ReceiverSoftwareVersion
            validateattributes(receiversoftwareversion, {'numeric'}, {'nonempty', 'scalar'}, 'NovatelMessageHeader', 'ReceiverSoftwareVersion');
            
            obj.JavaMessage.setReceiverSoftwareVersion(receiversoftwareversion);
        end
    end
    
    methods (Access = protected)
        function resetCache(obj)
            %resetCache Resets any cached properties
            obj.Cache.ReceiverStatus = [];
        end
        
        function cpObj = copyElement(obj)
            %copyElement Implements deep copy behavior for message
            
            % Call default copy method for shallow copy
            cpObj = copyElement@ros.Message(obj);
            
            % Clear any existing cached properties
            cpObj.resetCache;
            
            % Create a new Java message object
            cpObj.JavaMessage = obj.createNewJavaMessage;
            
            % Iterate over all primitive properties
            cpObj.MessageName = obj.MessageName;
            cpObj.Port = obj.Port;
            cpObj.SequenceNum = obj.SequenceNum;
            cpObj.PercentIdleTime = obj.PercentIdleTime;
            cpObj.GpsTimeStatus = obj.GpsTimeStatus;
            cpObj.GpsWeekNum = obj.GpsWeekNum;
            cpObj.GpsSeconds = obj.GpsSeconds;
            cpObj.ReceiverSoftwareVersion = obj.ReceiverSoftwareVersion;
            
            % Recursively copy compound properties
            cpObj.ReceiverStatus = copy(obj.ReceiverStatus);
        end
        
        function reload(obj, strObj)
            %reload Called by loadobj to assign properties
            obj.MessageName = strObj.MessageName;
            obj.Port = strObj.Port;
            obj.SequenceNum = strObj.SequenceNum;
            obj.PercentIdleTime = strObj.PercentIdleTime;
            obj.GpsTimeStatus = strObj.GpsTimeStatus;
            obj.GpsWeekNum = strObj.GpsWeekNum;
            obj.GpsSeconds = strObj.GpsSeconds;
            obj.ReceiverSoftwareVersion = strObj.ReceiverSoftwareVersion;
            obj.ReceiverStatus = feval([obj.NovatelGpsMsgsNovatelReceiverStatusClass '.loadobj'], strObj.ReceiverStatus);
        end
    end
    
    methods (Access = ?ros.Message)
        function strObj = saveobj(obj)
            %saveobj Implements saving of message to MAT file
            
            % Return an empty element if object array is empty
            if isempty(obj)
                strObj = struct.empty;
                return
            end
            
            strObj.MessageName = obj.MessageName;
            strObj.Port = obj.Port;
            strObj.SequenceNum = obj.SequenceNum;
            strObj.PercentIdleTime = obj.PercentIdleTime;
            strObj.GpsTimeStatus = obj.GpsTimeStatus;
            strObj.GpsWeekNum = obj.GpsWeekNum;
            strObj.GpsSeconds = obj.GpsSeconds;
            strObj.ReceiverSoftwareVersion = obj.ReceiverSoftwareVersion;
            strObj.ReceiverStatus = saveobj(obj.ReceiverStatus);
        end
    end
    
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
            %loadobj Implements loading of message from MAT file
            
            % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.custom.msggen.novatel_gps_msgs.NovatelMessageHeader.empty(0,1);
                return
            end
            
            % Create an empty message object
            obj = ros.custom.msggen.novatel_gps_msgs.NovatelMessageHeader;
            obj.reload(strObj);
        end
    end
end
