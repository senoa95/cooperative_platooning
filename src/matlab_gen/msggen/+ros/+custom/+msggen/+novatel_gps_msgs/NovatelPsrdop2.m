classdef NovatelPsrdop2 < ros.Message
    %NovatelPsrdop2 MATLAB implementation of novatel_gps_msgs/NovatelPsrdop2
    %   This class was automatically generated by
    %   ros.msg.internal.gen.MessageClassGenerator.
    
    %   Copyright 2014-2020 The MathWorks, Inc.
    
    %#ok<*INUSD>
    
    properties (Constant)
        MessageType = 'novatel_gps_msgs/NovatelPsrdop2' % The ROS message type
    end
    
    properties (Constant, Hidden)
        MD5Checksum = '8ad7d9f99e8c840fb04e7cb161bcbb5b' % The MD5 Checksum of the message definition
    end
    
    properties (Access = protected)
        JavaMessage % The Java message object
    end
    
    properties (Constant, Access = protected)
        NovatelGpsMsgsNovatelMessageHeaderClass = ros.msg.internal.MessageFactory.getClassForType('novatel_gps_msgs/NovatelMessageHeader') % Dispatch to MATLAB class for message type novatel_gps_msgs/NovatelMessageHeader
        NovatelGpsMsgsNovatelPsrdop2SystemClass = ros.msg.internal.MessageFactory.getClassForType('novatel_gps_msgs/NovatelPsrdop2System') % Dispatch to MATLAB class for message type novatel_gps_msgs/NovatelPsrdop2System
        StdMsgsHeaderClass = ros.msg.internal.MessageFactory.getClassForType('std_msgs/Header') % Dispatch to MATLAB class for message type std_msgs/Header
    end
    
    properties (Dependent)
        Header
        NovatelMsgHeader
        Gdop
        Pdop
        Hdop
        Vdop
        Systems
    end
    
    properties (Access = protected)
        Cache = struct('Header', [], 'NovatelMsgHeader', [], 'Systems', []) % The cache for fast data access
    end
    
    properties (Constant, Hidden)
        PropertyList = {'Gdop', 'Hdop', 'Header', 'NovatelMsgHeader', 'Pdop', 'Systems', 'Vdop'} % List of non-constant message properties
        ROSPropertyList = {'gdop', 'hdop', 'header', 'novatel_msg_header', 'pdop', 'systems', 'vdop'} % List of non-constant ROS message properties
    end
    
    methods
        function obj = NovatelPsrdop2(msg)
            %NovatelPsrdop2 Construct the message object NovatelPsrdop2
            import com.mathworks.toolbox.ros.message.MessageInfo;
            
            % Support default constructor
            if nargin == 0
                obj.JavaMessage = obj.createNewJavaMessage;
                return;
            end
            
            % Construct appropriate empty array
            if isempty(msg)
                obj = obj.empty(0,1);
                return;
            end
            
            % Make scalar construction fast
            if isscalar(msg)
                % Check for correct input class
                if ~MessageInfo.compareTypes(msg(1), obj.MessageType)
                    error(message('ros:mlros:message:NoTypeMatch', obj.MessageType, ...
                        char(MessageInfo.getType(msg(1))) ));
                end
                obj.JavaMessage = msg(1);
                return;
            end
            
            % Check that this is a vector of scalar messages. Since this
            % is an object array, use arrayfun to verify.
            if ~all(arrayfun(@isscalar, msg))
                error(message('ros:mlros:message:MessageArraySizeError'));
            end
            
            % Check that all messages in the array have the correct type
            if ~all(arrayfun(@(x) MessageInfo.compareTypes(x, obj.MessageType), msg))
                error(message('ros:mlros:message:NoTypeMatchArray', obj.MessageType));
            end
            
            % Construct array of objects if necessary
            objType = class(obj);
            for i = 1:length(msg)
                obj(i,1) = feval(objType, msg(i)); %#ok<AGROW>
            end
        end
        
        function header = get.Header(obj)
            %get.Header Get the value for property Header
            if isempty(obj.Cache.Header)
                obj.Cache.Header = feval(obj.StdMsgsHeaderClass, obj.JavaMessage.getHeader);
            end
            header = obj.Cache.Header;
        end
        
        function set.Header(obj, header)
            %set.Header Set the value for property Header
            validateattributes(header, {obj.StdMsgsHeaderClass}, {'nonempty', 'scalar'}, 'NovatelPsrdop2', 'Header');
            
            obj.JavaMessage.setHeader(header.getJavaObject);
            
            % Update cache if necessary
            if ~isempty(obj.Cache.Header)
                obj.Cache.Header.setJavaObject(header.getJavaObject);
            end
        end
        
        function novatelmsgheader = get.NovatelMsgHeader(obj)
            %get.NovatelMsgHeader Get the value for property NovatelMsgHeader
            if isempty(obj.Cache.NovatelMsgHeader)
                obj.Cache.NovatelMsgHeader = feval(obj.NovatelGpsMsgsNovatelMessageHeaderClass, obj.JavaMessage.getNovatelMsgHeader);
            end
            novatelmsgheader = obj.Cache.NovatelMsgHeader;
        end
        
        function set.NovatelMsgHeader(obj, novatelmsgheader)
            %set.NovatelMsgHeader Set the value for property NovatelMsgHeader
            validateattributes(novatelmsgheader, {obj.NovatelGpsMsgsNovatelMessageHeaderClass}, {'nonempty', 'scalar'}, 'NovatelPsrdop2', 'NovatelMsgHeader');
            
            obj.JavaMessage.setNovatelMsgHeader(novatelmsgheader.getJavaObject);
            
            % Update cache if necessary
            if ~isempty(obj.Cache.NovatelMsgHeader)
                obj.Cache.NovatelMsgHeader.setJavaObject(novatelmsgheader.getJavaObject);
            end
        end
        
        function gdop = get.Gdop(obj)
            %get.Gdop Get the value for property Gdop
            gdop = single(obj.JavaMessage.getGdop);
        end
        
        function set.Gdop(obj, gdop)
            %set.Gdop Set the value for property Gdop
            validateattributes(gdop, {'numeric'}, {'nonempty', 'scalar'}, 'NovatelPsrdop2', 'Gdop');
            
            obj.JavaMessage.setGdop(gdop);
        end
        
        function pdop = get.Pdop(obj)
            %get.Pdop Get the value for property Pdop
            pdop = single(obj.JavaMessage.getPdop);
        end
        
        function set.Pdop(obj, pdop)
            %set.Pdop Set the value for property Pdop
            validateattributes(pdop, {'numeric'}, {'nonempty', 'scalar'}, 'NovatelPsrdop2', 'Pdop');
            
            obj.JavaMessage.setPdop(pdop);
        end
        
        function hdop = get.Hdop(obj)
            %get.Hdop Get the value for property Hdop
            hdop = single(obj.JavaMessage.getHdop);
        end
        
        function set.Hdop(obj, hdop)
            %set.Hdop Set the value for property Hdop
            validateattributes(hdop, {'numeric'}, {'nonempty', 'scalar'}, 'NovatelPsrdop2', 'Hdop');
            
            obj.JavaMessage.setHdop(hdop);
        end
        
        function vdop = get.Vdop(obj)
            %get.Vdop Get the value for property Vdop
            vdop = single(obj.JavaMessage.getVdop);
        end
        
        function set.Vdop(obj, vdop)
            %set.Vdop Set the value for property Vdop
            validateattributes(vdop, {'numeric'}, {'nonempty', 'scalar'}, 'NovatelPsrdop2', 'Vdop');
            
            obj.JavaMessage.setVdop(vdop);
        end
        
        function systems = get.Systems(obj)
            %get.Systems Get the value for property Systems
            if isempty(obj.Cache.Systems)
                javaArray = obj.JavaMessage.getSystems;
                array = obj.readJavaArray(javaArray, obj.NovatelGpsMsgsNovatelPsrdop2SystemClass);
                obj.Cache.Systems = feval(obj.NovatelGpsMsgsNovatelPsrdop2SystemClass, array);
            end
            systems = obj.Cache.Systems;
        end
        
        function set.Systems(obj, systems)
            %set.Systems Set the value for property Systems
            if ~isvector(systems) && isempty(systems)
                % Allow empty [] input
                systems = feval([obj.NovatelGpsMsgsNovatelPsrdop2SystemClass '.empty'], 0, 1);
            end
            
            validateattributes(systems, {obj.NovatelGpsMsgsNovatelPsrdop2SystemClass}, {'vector'}, 'NovatelPsrdop2', 'Systems');
            
            javaArray = obj.JavaMessage.getSystems;
            array = obj.writeJavaArray(systems, javaArray, obj.NovatelGpsMsgsNovatelPsrdop2SystemClass);
            obj.JavaMessage.setSystems(array);
            
            % Update cache if necessary
            if ~isempty(obj.Cache.Systems)
                obj.Cache.Systems = [];
                obj.Cache.Systems = obj.Systems;
            end
        end
    end
    
    methods (Access = protected)
        function resetCache(obj)
            %resetCache Resets any cached properties
            obj.Cache.Header = [];
            obj.Cache.NovatelMsgHeader = [];
            obj.Cache.Systems = [];
        end
        
        function cpObj = copyElement(obj)
            %copyElement Implements deep copy behavior for message
            
            % Call default copy method for shallow copy
            cpObj = copyElement@ros.Message(obj);
            
            % Clear any existing cached properties
            cpObj.resetCache;
            
            % Create a new Java message object
            cpObj.JavaMessage = obj.createNewJavaMessage;
            
            % Iterate over all primitive properties
            cpObj.Gdop = obj.Gdop;
            cpObj.Pdop = obj.Pdop;
            cpObj.Hdop = obj.Hdop;
            cpObj.Vdop = obj.Vdop;
            
            % Recursively copy compound properties
            cpObj.Header = copy(obj.Header);
            cpObj.NovatelMsgHeader = copy(obj.NovatelMsgHeader);
            cpObj.Systems = copy(obj.Systems);
        end
        
        function reload(obj, strObj)
            %reload Called by loadobj to assign properties
            obj.Gdop = strObj.Gdop;
            obj.Pdop = strObj.Pdop;
            obj.Hdop = strObj.Hdop;
            obj.Vdop = strObj.Vdop;
            obj.Header = feval([obj.StdMsgsHeaderClass '.loadobj'], strObj.Header);
            obj.NovatelMsgHeader = feval([obj.NovatelGpsMsgsNovatelMessageHeaderClass '.loadobj'], strObj.NovatelMsgHeader);
            SystemsCell = arrayfun(@(x) feval([obj.NovatelGpsMsgsNovatelPsrdop2SystemClass '.loadobj'], x), strObj.Systems, 'UniformOutput', false);
            obj.Systems = vertcat(SystemsCell{:});
        end
    end
    
    methods (Access = ?ros.Message)
        function strObj = saveobj(obj)
            %saveobj Implements saving of message to MAT file
            
            % Return an empty element if object array is empty
            if isempty(obj)
                strObj = struct.empty;
                return
            end
            
            strObj.Gdop = obj.Gdop;
            strObj.Pdop = obj.Pdop;
            strObj.Hdop = obj.Hdop;
            strObj.Vdop = obj.Vdop;
            strObj.Header = saveobj(obj.Header);
            strObj.NovatelMsgHeader = saveobj(obj.NovatelMsgHeader);
            strObj.Systems = arrayfun(@(x) saveobj(x), obj.Systems);
        end
    end
    
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
            %loadobj Implements loading of message from MAT file
            
            % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.custom.msggen.novatel_gps_msgs.NovatelPsrdop2.empty(0,1);
                return
            end
            
            % Create an empty message object
            obj = ros.custom.msggen.novatel_gps_msgs.NovatelPsrdop2;
            obj.reload(strObj);
        end
    end
end
