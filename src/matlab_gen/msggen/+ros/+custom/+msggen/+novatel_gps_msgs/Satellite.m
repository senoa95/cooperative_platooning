classdef Satellite < ros.Message
    %Satellite MATLAB implementation of novatel_gps_msgs/Satellite
    %   This class was automatically generated by
    %   ros.msg.internal.gen.MessageClassGenerator.
    
    %   Copyright 2014-2020 The MathWorks, Inc.
    
    %#ok<*INUSD>
    
    properties (Constant)
        MessageType = 'novatel_gps_msgs/Satellite' % The ROS message type
    end
    
    properties (Constant, Hidden)
        MD5Checksum = 'd862f2ce05a26a83264a8add99c7b668' % The MD5 Checksum of the message definition
    end
    
    properties (Access = protected)
        JavaMessage % The Java message object
    end
    
    properties (Dependent)
        Prn
        Elevation
        Azimuth
        Snr
    end
    
    properties (Constant, Hidden)
        PropertyList = {'Azimuth', 'Elevation', 'Prn', 'Snr'} % List of non-constant message properties
        ROSPropertyList = {'azimuth', 'elevation', 'prn', 'snr'} % List of non-constant ROS message properties
    end
    
    methods
        function obj = Satellite(msg)
            %Satellite Construct the message object Satellite
            import com.mathworks.toolbox.ros.message.MessageInfo;
            
            % Support default constructor
            if nargin == 0
                obj.JavaMessage = obj.createNewJavaMessage;
                return;
            end
            
            % Construct appropriate empty array
            if isempty(msg)
                obj = obj.empty(0,1);
                return;
            end
            
            % Make scalar construction fast
            if isscalar(msg)
                % Check for correct input class
                if ~MessageInfo.compareTypes(msg(1), obj.MessageType)
                    error(message('ros:mlros:message:NoTypeMatch', obj.MessageType, ...
                        char(MessageInfo.getType(msg(1))) ));
                end
                obj.JavaMessage = msg(1);
                return;
            end
            
            % Check that this is a vector of scalar messages. Since this
            % is an object array, use arrayfun to verify.
            if ~all(arrayfun(@isscalar, msg))
                error(message('ros:mlros:message:MessageArraySizeError'));
            end
            
            % Check that all messages in the array have the correct type
            if ~all(arrayfun(@(x) MessageInfo.compareTypes(x, obj.MessageType), msg))
                error(message('ros:mlros:message:NoTypeMatchArray', obj.MessageType));
            end
            
            % Construct array of objects if necessary
            objType = class(obj);
            for i = 1:length(msg)
                obj(i,1) = feval(objType, msg(i)); %#ok<AGROW>
            end
        end
        
        function prn = get.Prn(obj)
            %get.Prn Get the value for property Prn
            prn = typecast(int8(obj.JavaMessage.getPrn), 'uint8');
        end
        
        function set.Prn(obj, prn)
            %set.Prn Set the value for property Prn
            validateattributes(prn, {'numeric'}, {'nonempty', 'scalar'}, 'Satellite', 'Prn');
            
            obj.JavaMessage.setPrn(prn);
        end
        
        function elevation = get.Elevation(obj)
            %get.Elevation Get the value for property Elevation
            elevation = typecast(int8(obj.JavaMessage.getElevation), 'uint8');
        end
        
        function set.Elevation(obj, elevation)
            %set.Elevation Set the value for property Elevation
            validateattributes(elevation, {'numeric'}, {'nonempty', 'scalar'}, 'Satellite', 'Elevation');
            
            obj.JavaMessage.setElevation(elevation);
        end
        
        function azimuth = get.Azimuth(obj)
            %get.Azimuth Get the value for property Azimuth
            azimuth = typecast(int16(obj.JavaMessage.getAzimuth), 'uint16');
        end
        
        function set.Azimuth(obj, azimuth)
            %set.Azimuth Set the value for property Azimuth
            validateattributes(azimuth, {'numeric'}, {'nonempty', 'scalar'}, 'Satellite', 'Azimuth');
            
            obj.JavaMessage.setAzimuth(azimuth);
        end
        
        function snr = get.Snr(obj)
            %get.Snr Get the value for property Snr
            snr = int8(obj.JavaMessage.getSnr);
        end
        
        function set.Snr(obj, snr)
            %set.Snr Set the value for property Snr
            validateattributes(snr, {'numeric'}, {'nonempty', 'scalar'}, 'Satellite', 'Snr');
            
            obj.JavaMessage.setSnr(snr);
        end
    end
    
    methods (Access = protected)
        function cpObj = copyElement(obj)
            %copyElement Implements deep copy behavior for message
            
            % Call default copy method for shallow copy
            cpObj = copyElement@ros.Message(obj);
            
            % Create a new Java message object
            cpObj.JavaMessage = obj.createNewJavaMessage;
            
            % Iterate over all primitive properties
            cpObj.Prn = obj.Prn;
            cpObj.Elevation = obj.Elevation;
            cpObj.Azimuth = obj.Azimuth;
            cpObj.Snr = obj.Snr;
        end
        
        function reload(obj, strObj)
            %reload Called by loadobj to assign properties
            obj.Prn = strObj.Prn;
            obj.Elevation = strObj.Elevation;
            obj.Azimuth = strObj.Azimuth;
            obj.Snr = strObj.Snr;
        end
    end
    
    methods (Access = ?ros.Message)
        function strObj = saveobj(obj)
            %saveobj Implements saving of message to MAT file
            
            % Return an empty element if object array is empty
            if isempty(obj)
                strObj = struct.empty;
                return
            end
            
            strObj.Prn = obj.Prn;
            strObj.Elevation = obj.Elevation;
            strObj.Azimuth = obj.Azimuth;
            strObj.Snr = obj.Snr;
        end
    end
    
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
            %loadobj Implements loading of message from MAT file
            
            % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.custom.msggen.novatel_gps_msgs.Satellite.empty(0,1);
                return
            end
            
            % Create an empty message object
            obj = ros.custom.msggen.novatel_gps_msgs.Satellite;
            obj.reload(strObj);
        end
    end
end
